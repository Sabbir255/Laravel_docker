version: "3.9"

services:
  # Laravel App (PHP + Composer + Artisan)
  app:

    image: sabbir25500590/laravel-docker:latest
    # build:
    #   context: .
    #   dockerfile: docker/php/Dockerfile
    container_name: laravel_app
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      # - ./:/var/www        # Mount whole app for development
      # - /var/www/vendor
    # - storage_file:/var/www/storage/app/public  
    - ./storage/app/public  :/var/www/storage/app/public  
    networks:
      - laravel_blog
    depends_on:
      - mysql
      - redis
        

  # Nginx Server
  nginx:
    image: nginx:alpine
    container_name: laravel_nginx
    restart: unless-stopped
    ports:
      - "9000:80"
    volumes:
      - ./:/var/www
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    networks:
      - laravel_blog
    depends_on:
      - app

  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: laravel_mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD:  ${DB_PASSWORD}
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    volumes:
      - mysql_data:/var/lib/mysql 
    networks:
      - laravel_blog

  # phpMyAdmin
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: laravel_phpmyadmin
    restart: unless-stopped
    environment:
      PMA_HOST: mysql
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
    ports:
      - "9090:80"
    networks:
      - laravel_blog

  # Redis
  redis:
    image: redis:alpine
    container_name: laravel_redis
    restart: unless-stopped 
    networks:
      - laravel_blog

networks:
  laravel_blog:
    driver: bridge

volumes:
  mysql_data:
  # storage_file:
